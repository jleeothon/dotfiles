[user]
	useConfigOnly = true
	name = Johnny Lee-Othon
	email = jleeothon@icloud.com
[alias]
	addbuild = add '**/build'
	addgen = add '**/*.gen.ts' '**/*.gen.d.ts' '*.d.ts'
	amend = commit --amend --reuse-message HEAD
	amendall = commit --amend -a --reuse-message HEAD
	amendmess = commit --amend
	amendn = commit -n --amend --reuse-message HEAD
	author-reset = commit --amend --reset-author
	autofix = rebase -i --autosquash
	back = switch -
	branchd = branch -D
	cd = checkout
	ch = checkout
	chdefault = "!git checkout ${DEFAULT_BRANCH:-default-branch-not-set}"
	commitm = commit -m
	diff-master = "!set -eux && git diff \"$(git merge-base HEAD master)\""
	diff-master-names = "!set -eux && git diff --name-only \"$(git merge-base HEAD master)\""
	diffupstream = diff @{upstream}
	fetchdefault = "!git fetch origin ${DEFAULT_BRANCH:-default-branch-not-set}:$DEFAULT_BRANCH"
	fixup = commit -n --fixup
	l = log --graph --decorate
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]%Cgreen\\ (%cs)" --decorate
	msg = "!f() { args=\"$@\"; git commit -m \"$args\"; }; f"
	lastbranch = rev-parse --abbrev-ref @{-1}
	obranch = branch --format='%(refname:short)' --sort=committerdate
	ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	prunemerged = "! git branch --format '%(refname:short)' --merged \"origin/$1\" | grep -v -e '^'\"$1\"'$' | xargs -L 100 git branch -d"
	puff = push -u --force-with-lease
	pufefe = push -u --force-with-lease --no-verify
	pushup = push -u origin HEAD
	reb = rebase
	rebi = rebase -i
	reblast = "!f() { git rebase -i HEAD~${1:-2}; }; f"
	rebo = rebase -i origin/master
	rebroot = rebase -i --root master
	rebtil = "!f() { git rebase -i $1~; }; f"
	resetupstream = reset --hard @{upstream}
	s = switch
	squash = commit --squash HEAD
	theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
	tip = log -n 1 HEAD
[diff]
	submodule = log
	noprefix = true
[fetch]
	recurseSubmodules = on-demand
[status]
	submoduleSummary = true
[include]
	path = ./.private.gitconfig
[filter "lfs"]
	clean = git-lfs clean -- %f
	process = git-lfs filter-process
	required = true
	smudge = git-lfs smudge -- %f
[core]
	excludesfile = ~/.gitignoreglobal
	quotepath = off
[pull]
	rebase = true
[rebase]
	autostash = true
[branch]
	autosetuprebase = always
