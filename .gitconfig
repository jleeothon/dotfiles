[user]
	useConfigOnly = true
[alias]
	prunemerged = "! git branch --format '%(refname:short)' --merged origin/master | grep -v -e '^master$' | xargs -L 100 git branch -d"
	amend = "!f() { git commit --amend --reuse-message HEAD; }; f"
	amendall = commit --amend -a --reuse-message HEAD
	amendmess = commit --amend
	author-reset = commit --amend --reset-author
	cd = checkout
	checkmaster = checkout origin/master --
	commitm = commit -m
	diffup = diff @{upstream}
	fixlast = "!f() { C=HEAD~$1; [ -z $1 ] && C=HEAD~2; GIT_SEQUENCE_EDITOR=true git rebase -i --autosquash $C; }; f"
	fixtil = "!f() { [ -z $1 ] && C="HEAD~2" || C="$1~"; GIT_SEQUENCE_EDITOR=true git rebase -i --autosquash $C; }; f"
	fixup = commit -n --fixup
	fixuptil = "!f() { git fixup \"$1\" && git fixtil \"$1\"; }; f"
	force = push -u --force --force-with-lease origin HEAD
	hub = "!github $@"
	l = log --graph --decorate
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	msg = "!f() { args=\"$@\"; git commit -m \"$args\"; }; f"
	obranch = branch --sort=committerdate
	ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	puff = "!f() { echo üí®; git push -u --force --force-with-lease; }; f"
	purr = "!f() { echo üê±; PUSH_BRANCH=$(git rev-parse --verify --abbrev-ref @{push}); git pull --rebase origin \"${PUSH_BRANCH#*/}\"; }; f"
	pushup = push -u origin HEAD
	rebi = "rebase -i"
	reblast = "!f() { git rebase -i HEAD~${1:-2}; }; f"
	rebroot = rebase -i --root master
	rebtil = "!f() { git rebase -i $1~; }; f"
	resetupstream = reset --hard @{upstream}
	squash = commit --squash HEAD
	theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
	tip = log -n 1 HEAD
[diff]
	submodule = log
[fetch]
	recurseSubmodules = on-demand
[status]
	submoduleSummary = true
[include]
	path = ./.private.gitconfig
[filter "lfs"]
	clean = git-lfs clean -- %f
	process = git-lfs filter-process
	required = true
	smudge = git-lfs smudge -- %f
[core]
	excludesfile = ~/.gitignoreglobal
